openapi: 3.0.2
info:
  version: 2.1
  title: Topcontent REST API
  termsOfService: 'https://topcontent.com/terms-and-conditions/'
  contact:
    email: support@topcontent.com
  x-logo:
    url: >-
      https://topcontent.com/wp-content/uploads/2018/10/TopContent_source_sans_pro2.png
tags:
  - name: Introduction
    description: >
      Welcome to the reference for the Topcontent REST API!

      ## Flow

      The Topcontent API allows you to connect your app to Topcontent, and order
      human translation and content without needing to use our self-service.
      Because human translation and writing is not instant, our API is
      asynchronous. This means that you need to allow time for contributors to
      complete their work.

      ## What happens behind the scenes

      Once an order has been submitted, Topcontent contributorrs receive a
      notification of new work available and work on tasks on a first-come,
      first-serve basis. They work on the tasks within our system’s interface.

      ## Submitting an order

      //TODO

      ## Checking on the status of the order

      //TODO

      ## Getting the items back

      //TODO

      ## Escaping content for translation

      //TODO

      ## Quality levels supported through the API

      //TODO

      ## Review workflows

      //TODO

      ## Request corrections for the item

      //TODO
  - name: Sandbox Testing
    description: >
      ## The test area for your API code

      What’s different about the sandbox?

      - Add free credits to your account for testing

      - Trigger the “completion” of your translation jobs (i.e. be a faux
      translator) so that you can test what your code does in response

      - Manually toggle between item states (e.g. pending to reviewable) and
      other actions without triggering callbacks

      - Test callbacks by clicking the Send Callback button


      Note: The sandbox items database may occasionally be wiped clean to
      prepare it for new features so you should not rely on the sandbox for
      permanent storage.

      ## How to use the sandbox

      - Read the developer documentation

      - Create a sandbox account

      - Log in and generate a set of sandbox API keys

      - Test your app, using http://api.sandbox.topcontent.com/v2/ as the base
      call URL


      Ready to deploy? Head over to the live Topcontent site. Create a full
      client account, generate a set of live API keys - and remember to paste
      them into your app.
  - name: Best Practices
    description: >
      The following checklist contains practices critical for a healthy
      integration. Make sure your integration has all of them.

      ## Follow the Topcontent API workflow

      The proper workflow is as follows:

      - Submit text/file for translation or place a content order

      - Get order status

      - Retrieve completed items


      See the Visual Guide for more information.


      ## Make use of triple brackets

      If ordering trranslations triple brackets are useful to make sure certain
      texts, such as brand names, are preserved and uncharged. [Learn more](#)


      Note: HTML tags are an exception to this rule. Do not bracket them as you
      are not charged for them by default.

      ## Provide instructions for contributors

      //TODO

      ## Store internal information in custom_data

      The “custom_data” parameter is designed for users of our API to help
      connect information in your system for reference. Do not store reference
      information in the callback_url or slug.

      ## Use both callback functionality AND update polling, not just one or the
      other

      The callback/webhook functionality is used to receive notifications about
      the item and is an easy way to get updates when your items change status.
      You can learn more about when these callbacks are sent on the [callbacks
      page](#).


      However, due to possible network issues, callbacks must not be relied upon
      entirely. Make sure to periodically poll for items to stay updated with
      your items’ statuses. You can then the available items using the ```GET
      /translations/items/{ids}/``` endpoint as per the Visual Guide.

      ## Include the functionality to approve or return the items for
      corrections

      Make sure to include the option to approve or return items for corrections
      using the ```PUT /translations/items/``` endpoint as necessary.


      See our section for [review workflows](#) for more information.


      Unless you are working with trusted or preferred contributors, it is best
      to use ```auto_approve = 0```. By getting the item approved, you
      acknowledge that you are happy with the result, and thus forfeit your
      right to request for corrections.
  - name: Overview
    description: >
      In order to use the API, you should authenticate your request by including
      your API key in each request as a GET or POST as a 'api_key' param.

      ## Headers

      Make sure you have the following content type headers are set on every
      request:


      ```Accept: application/json``` ```Content-Type: application/json```

      ## Response Formats

      All API responses will contain at least 1 and possibly 2 key-value pairs.
      The second key’s name will depend on whether the call was successful or
      not. The second key name for a successful call with an expected payload
      will be “response”, i.e. {“status” : “ok”, “response” : ”...”} and a
      failed response will have second key name as “errors”, i.e. {“status” :
      “errors”, “err” : {“code” : ...}}

      ## Encoding

      Topcontent expects all data to be UTF-8 encoded and will respond with
      UTF-8 encoded data. Make sure you encode your data in UTF-8 to avoid
      issues.

      ## Throttling

      To ensure fair usage in our API, we put limits on the number of requests
      per originating IP address.


      //TODO


      Requests are tracked at millisecond granularity. For example, a 100
      requests/second corresponds to 10 requests every 100 milliseconds.
  - name: Authentication
    description: >
      In order to use the API, you should authenticate your request by including
      your API key in each request as a GET or POST as a 'api_key' param.

      //TODO How about use public and private_kay? Will not be easy to use
      Postman in this case
  - name: Callback URLs
    description: >
      When submitting an order, you can set “callback_url” for each item in the
      order. Topcontent will post any updates about the item as they happen
      which makes it the most efficient way to sync your system with Topcontent.


      Callback notifications are sent when:

      - An item is ready for review

      - An item has been approved automatically

      - An item is manually approved via our Topcontent self-service interface
  - name: Errors
    description: >
      Topcontent uses conventional HTTP response codes to indicate the success
      or failure of an API request. The table below contains a summary of the
      typical response codes:


      Code | Description

      --------- | -------

      200 | Everything is ok.

      400 | Valid data was given but the request has failed.

      401 | No valid API Key was given.

      404 | The request resource could not be found.

      422 | The payload has missing required parameters or invalid data was
      given.

      429 | Too many attempts.

      500 | Request failed due to an internal error in Topcontent.

      503 | Topcontent offline for maintenance.
  - name: Translation Orders
    description: >
      This describes the endpoints that deal with translation orders on the
      Topcontent API.
  - name: Translation Items
    description: >
      This describes the endpoints that deal with translation items on the
      Topcontent API.
  - name: Translation Qualities
    description: >
      This describes the endpoints that deal with translation qualities on the
      Topcontent API.
  - name: Translation Language Directions
    description: >
      This describes the endpoints that deal with translation language
      directions on the Topcontent API.
  - name: Content Orders
    description: >
      This describes the endpoints that deal with content orders on the
      Topcontent API.
  - name: Content Items
    description: >
      This describes the endpoints that deal with content items on the
      Topcontent API.
  - name: Content Qualities
    description: >
      This describes the endpoints that deal with content qualities on the
      Topcontent API.
  - name: Content Languages
    description: >
      This describes the endpoints that deal with content languages on the
      Topcontent API.
  - name: Invoices
    description: >
      This describes the endpoints that deal with account invoices on the
      Topcontent API.
  - name: Balance
    description: |
      This describes the endpoints that deal with balance on the Topcontent API.
x-tagGroups:
  - name: Getting started
    tags:
      - Introduction
      - Sandbox Testing
      - Best Practices
  - name: API Details
    tags:
      - Overview
      - Authentication
      - Callback URLs
      - Errors
  - name: Translations
    tags:
      - Translation Orders
      - Translation Items
      - Translation Qualities
      - Translation Language Directions
  - name: Content
    tags:
      - Content Orders
      - Content Items
      - Content Qualities
      - Content Languages
  - name: Account
    tags:
      - Invoices
      - Balance
servers:
  - url: 'https://app.topcontent.com/api/v2'
paths:
  /translations/orders:
    post:
      tags:
        - Translation Orders
      summary: Submit a translation order
      operationId: PostTranslationOrder
      security:
        - api_key: []
      description: >
        Submits an order for translation. One order should contain at least one
        item. On order could contain different types of items.
      requestBody:
        $ref: '#/components/requestBodies/TranslationOrder'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema: null
              example:
                username: user1
                email: user@example.com
        '403':
          description: Forbidden
        '404':
          description: User not found
  /content/orders:
    post:
      tags:
        - Content Orders
      summary: Order an item or group of items to write.
      operationId: PostContentOrder
      security:
        - api_key: []
      description: >
        Submits a content order. One order should contain at least one item. On
        order could contain different types of items.
      requestBody:
        $ref: '#/components/requestBodies/ContentOrder'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentOrderSuccessResponse'
        '403':
          description: Forbidden
        '404':
          description: User not found
components:
  schemas:
    TranslationOrder:
      type: object
      required:
        - order_name
      properties:
        order_name:
          description: Name of the order.
          type: string
          maxLength: 255
          example: Translate EN to SV
        source_language_code:
          description: Source language code.
          type: string
          minLength: 2
          maxLength: 5
          example: SV
        target_language_code:
          description: Target language code.
          type: string
          minLength: 2
          maxLength: 5
          example: EN
        quality_code:
          description: Quality level.
          type: string
          minLength: 2
          maxLength: 2
          example: business
        topic_id:
          description: ID of the ordering topic.
          type: integer
          example: 2
        custom_data:
          description: Custom data for the order from a client.
          type: string
          maxLength: 255
          example: BQ
        invoiceCount:
          description: >-
            An auto-incrementing number based on the sequence of invoices. If
            set to 0, then this record is a Lead, otherwise is a Customer
          readOnly: true
          type: integer
    ContentOrder:
      type: object
      required:
        - order_name
        - items
      properties:
        order_name:
          description: 'Name of the order. For internally storing, can be generic'
          type: string
          maxLength: 255
          example: Translate EN to SV
        items:
          type: array
          description: >-
            An array of Items Payloads. Please see the item payloads information
            for full details of the required parameters.
          minItems: 1
          items:
            type: object
            required:
              - slug
              - language_code
              - quality_code
              - h1
              - min_words
              - template_id
            properties:
              slug:
                description: 'Item title. For internally storing, can be generic'
                type: string
                maxLength: 255
                example: //TODO
              language_code:
                description: Source language code.
                type: string
                minLength: 2
                maxLength: 5
                example: SV
              quality_code:
                description: Quality level.
                type: string
                minLength: 2
                maxLength: 2
                example: business
              topic_id:
                description: ID of the ordering topic.
                type: integer
                example: 2
              h1:
                description: //TODO
                type: string
                maxLength: 255
                example: BQ
              min_words:
                description: //TODO
                type: integer
                minLength: 5
                maxLength: 5000
                example: 800
              template_id:
                description: //TODO
                type: string
                example: gh2J34kL
              meta_tags:
                description: //TODO
                type: boolean
                example: true
                default: false
              focus_keyword:
                description: //TODO
                type: array
                maxItems: 1
                items:
                  type: object
                  properties:
                    keyword:
                      type: string
                      maxLength: 255
                    match:
                      type: string
                      enum:
                        - exact
                        - near
                  example:
                    keyword: Jesica Smith
                    match: exact
              sub_keywords:
                description: //TODO
                type: array
                items:
                  type: object
                  properties:
                    keyword:
                      type: string
                      maxLength: 255
                    match:
                      type: string
                      enum:
                        - exact
                        - near
                  example:
                    keyword: Jesica Smith
                    match: exact
              source_urls:
                description: //TODO
                type: array
                items:
                  type: string
                  example:
                    - 'https://wiki.com'
                    - 'https://wiki2.com'
                    - 'https://wiki3.com'
              target_url:
                description: //TODO
                type: string
                maxLength: 255
                example: //TODO
              links:
                description: //TODO
                type: array
                items:
                  type: object
                  properties:
                    anchor:
                      type: string
                      maxLength: 50
                    url:
                      type: string
                      maxLength: 255
                  example:
                    anchor: //TODO
                    url: //TODO
              tone_of_voice:
                description: >-
                  Describing the tone of the text examples: 'Informal',
                  'Friendly', 'Business', 'Formal'. Those 4 are recommended.
                  Those will give best results
                type: string
                maxLength: 150
                example: //TODO
              instructions:
                description: >-
                  Instructions for contributor to consider when writing. It is
                  strongly encouraged to provide a detailed instructions for the
                  contributor
                type: string
                maxLength: 1000
                example: //TODO
              auto_approve:
                description: >-
                  Whether to automatically approve an item after they’ve been
                  finished. Default is false If false, completed item will await
                  review and approval by customer for 96 hours
                type: boolean
                example: false
                default: fasle
              custom_data:
                description: >-
                  Up to 1K of storage for client-specific data that may be
                  helpful for you to have mapped to this item
                type: string
                example: '{request_id: 87353}'
              return_options:
                description: >-
                  Contains array. Please see the return options payloads page
                  for full details of the parameters.
                type: array
                items:
                  type: object
                  properties:
                    integration:
                      type: string
                      enum:
                        - callback_url
                    url:
                      type: string
                      maxLength: 255
                    auto_send:
                      type: boolean
                      default: false
                  example:
                    integration: callback_url
                    url: //TODO
                    auto_send: true
    ContentOrderSuccessResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        response:
          type: object
          properties:
            order_id:
              type: integer
              description: //TODO
              example: 673423
            status:
              type: string
              description: //TODO
              enum:
                - draft
                - in production
              example: in production
            item_count:
              type: integer
              description: //TODO
              example: 5
            credits_used:
              type: number
              description: //TODO
              example: 120.5
            currency:
              type: string
              description: //TODO
              example: EUR
  requestBodies:
    TranslationOrder:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TranslationOrder'
      description: Translation order resource
      required: true
    ContentOrder:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContentOrder'
      description: Content order resource
      required: true
